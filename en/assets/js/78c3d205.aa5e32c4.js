"use strict";(self.webpackChunkklipper_docs=self.webpackChunkklipper_docs||[]).push([["74620"],{88571:function(e,n,o){o.r(n),o.d(n,{frontMatter:()=>s,default:()=>d,contentTitle:()=>a,assets:()=>p,toc:()=>l,metadata:()=>t});var t=JSON.parse('{"id":"ProductDoc/ToolBoard/fly-sb2040/sb2040-pro/cfg","title":"Reference Configuration","description":"","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/ProductDoc/ToolBoard/fly-sb2040/sb2040-pro/cfg.mdx","sourceDirName":"ProductDoc/ToolBoard/fly-sb2040/sb2040-pro","slug":"/ProductDoc/ToolBoard/fly-sb2040/sb2040-pro/cfg","permalink":"/fly-docs-next/en/docs/ProductDoc/ToolBoard/fly-sb2040/sb2040-pro/cfg","draft":false,"unlisted":false,"editUrl":"https://github.com/kluoyun/fly-docs-next/tree/master/docs/ProductDoc/ToolBoard/fly-sb2040/sb2040-pro/cfg.mdx","tags":[],"version":"current","lastUpdatedBy":"xishangyue","lastUpdatedAt":1746004502000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5,"sidebar_label":"Reference Configuration"},"sidebar":"tutorialSidebar","previous":{"title":"Motherboard Wiring","permalink":"/fly-docs-next/en/docs/ProductDoc/ToolBoard/fly-sb2040/sb2040-pro/wiring"},"next":{"title":"Accelerometer Usage","permalink":"/fly-docs-next/en/docs/ProductDoc/ToolBoard/fly-sb2040/sb2040-pro/adxl"}}'),r=o(85893),i=o(50065);let s={sidebar_position:5,sidebar_label:"Reference Configuration"},a="Reference Configuration",p={},l=[];function c(e){let n={code:"code",h1:"h1",header:"header",pre:"pre",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"reference-configuration",children:"Reference Configuration"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cfg",children:'#####################################################################\n#                               Mainboard Configuration\n#####################################################################\n[mcu sb2040]  # Tool board serial number\ncanbus_uuid: e51d5c71a901\n### To query CAN firmware ID: ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0\n\n#####################################################################\n#                       adxl345 Accelerometer Configuration (Enable if needed)\n#####################################################################\n## ADXL345 Accelerometer\n[adxl345]\ncs_pin: sb2040:gpio1\nspi_software_sclk_pin: sb2040:gpio0\nspi_software_mosi_pin: sb2040:gpio3\nspi_software_miso_pin: sb2040:gpio2\n#--------------------------------------------------------------------\n[resonance_tester]\naccel_chip: adxl345         # Accelerometer chip model\nprobe_points: 150,150,10    # Coordinates set to the center of the heated bed\n\n#####################################################################\n#                             Temperature Monitoring\n#####################################################################\n[temperature_sensor FLY-SB2040-PRO] # Tool board MCU temperature\nsensor_type: temperature_mcu        # Associated MCU\nsensor_mcu: sb2040\n#--------------------------------------------------------------------\n[temperature_sensor Warehouse]     # Tool board thermistor temperature \nsensor_type: ATC Semitec 104GT-2\nsensor_pin: sb2040:gpio26\n\n#####################################################################\n#                            E Extruder Settings\n#####################################################################\n# Note: Test running direction after wiring\n[extruder]\nstep_pin: sb2040:gpio9\ndir_pin: sb2040:gpio10              # Extruder motor direction pin\nenable_pin: !sb2040:gpio7\n## Update the following values when calibrating the extruder\n## For example, if you request 100mm of filament but actually get 102:\n## rotation_distance = <old_rotation_distance> * <actual_extrude_length> / <requested_extrude_length>\n## Calibration step value: 22.44 = old value 22 * actual value 102 / target value 100\nrotation_distance: 22.44            # Step value\ngear_ratio: 50:17                   # Gear ratio (Galileo 7.5:1, comment out this line; BMG is 50:17, output shaft in front, input shaft in back)\nmicrosteps: 16                      # Motor microstepping, higher value = higher quality, but more MCU load\nfull_steps_per_rotation: 200        # Steps per revolution (200 for 1.8\xb0, 400 for 0.9\xb0)\nnozzle_diameter: 0.400              # Nozzle diameter\nfilament_diameter: 1.75             # Filament diameter\nheater_pin: sb2040:gpio6            # Heater pin, connect to HETA0\n#--------------------------------------------------------------------\n## Standard thermistor configuration\nsensor_type: ATC Semitec 104GT-2    # Sensor model (Generic 3950, ATC Semitec 104GT-2, PT1000)\nsensor_pin: sb2040:gpio27           # Sensor pin  \n#--------------------------------------------------------------------\n## PT1000 configuration\n#sensor_type: PT1000                 # Sensor model (Generic 3950, ATC Semitec 104GT-2, PT1000)\n#pullup_resistor: 1000               # Thermistor pull-up resistor 1000, if temperature is -180, change jumper\n#sensor_pin: sb2040:gpio27           # Sensor pin \n#--------------------------------------------------------------------\n#sensor_type: MAX31865                # Sensor model, PT100 version\n#sensor_pin: sb2040:gpio22            # Sensor pin, PT100 version\n# spi_software_sclk_pin: sb2040:gpio18\n# spi_software_mosi_pin: sb2040:gpio19\n# spi_software_miso_pin: sb2040:gpio23\n#rtd_reference_r: 430                 # Remove # when using 31865\n#rtd_nominal_r: 100  ## Set to 100 for PT100, 1000 for PT1000\n#--------------------------------------------------------------------\nmin_temp: -200                      # Minimum temperature\nmax_temp: 350                       # Maximum temperature\nmax_power: 1.0                      # Maximum power\nmin_extrude_temp: 170               # Minimum extrusion temperature (must reach this temp to extrude)\npressure_advance: 0.05              # Pressure advance - keep below 1.0 if possible\n# Pressure advance tuning: https://www.klipper3d.org/Pressure_Advance.html\npressure_advance_smooth_time: 0.040 # Smooth advance time, default 0.040\n#max_extrude_only_distance: 200.0   # Comment out if extrusion flow error, but re-slice is recommended\n# Nozzle temperature PID calibration command: "PID_CALIBRATE HEATER=extruder TARGET=245\ncontrol = pid                # PID nozzle temperature auto-calibration (will be commented after calibration)\npid_kp = 26.213\npid_ki = 1.304\npid_kd = 131.721\nstep_pulse_duration: 0.000004     \n#--------------------------------------------------------------------\n[tmc2240 extruder]\ncs_pin: sb2040:gpio11               # SPI chip select pin\nspi_software_sclk_pin: sb2040:gpio0\nspi_software_mosi_pin: sb2040:gpio3\nspi_software_miso_pin: sb2040:gpio2\nrun_current: 0.65                   # Motor run current\ninterpolate: False                  # Enable 256 microstep interpolation (not recommended)\nrref: 12300                         # Driver sense resistor\nstealthchop_threshold: 99999        # StealthChop threshold (set to 0 to disable)\ndriver_TPFD: 0\n\n#####################################################################\n#                             Fan Configuration\n#####################################################################\n[fan]                        # Model cooling fan\npin: sb2040:gpio13           # Signal interface\nkick_start_time: 0.5         # Startup time (do not change)\noff_below: 0.10              # Do not change\n#--------------------------------------------------------------------\n[heater_fan hotend_fan]      # Throat cooling fan\npin: sb2040:gpio14           # Signal interface\nmax_power: 1.0               # Maximum speed\nkick_start_time: 0.5         # Startup time (do not change)\nheater: extruder             # Associated device: extruder\nheater_temp: 50              # Fan starts when extruder reaches this temp\nfan_speed: 1.0               # Fan speed\n\n#####################################################################\n#                            X Endstop Configuration\n#####################################################################\n[stepper_x]\nendstop_pin: !sb2040:gpio29\n## SB2040 board has gpio25, gpio28, gpio29 available for endstops, gpio25 supports high voltage input. Modify according to actual wiring.\n\n#####################################################################\n#                           SB Head LED Configuration\n#####################################################################\n[neopixel sb_leds]\npin: sb2040:gpio12\nchain_count: 3              # Number of LEDs\ncolor_order: GRBW           # LED type\ninitial_RED: 0.4\ninitial_GREEN: 0.8\ninitial_BLUE: 1\ninitial_WHITE: 0.0\n\n#####################################################################\n#                           PL08N Inductive Probe\n#####################################################################\n# PL08N probe should not be lower than nozzle height, only for leveling. If your PL08N is NO (normally open), add ! to the pin.\n#[probe]\n#pin: ^sb2040:gpio25          # Signal interface\n#x_offset: 0                  # Sensor offset from nozzle, determine offset yourself\n#y_offset: 25.0\n#z_offset: 0\n#speed: 10.0                  # Leveling speed\n#samples: 3                   # Number of samples\n#samples_result: median\n#sample_retract_dist: 4.0     # Leveling retract distance\n#samples_tolerance: 0.010     # Sampling tolerance (too small may increase sample count)\n#samples_tolerance_retries: 3 # Retry count for exceeding tolerance\n\n#--------------------------------------------------------------------\n#[bltouch]\n#sensor_pin: ^sb2040:gpio29   # Signal interface\n#control_pin: sb2040:gpio28   # Servo control\n#x_offset: -26.1\n#y_offset: -15.3\n#z_offset: 2.1\n\n'})})]})}function d(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},50065:function(e,n,o){o.d(n,{Z:()=>a,a:()=>s});var t=o(67294);let r={},i=t.createContext(r);function s(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);