"use strict";(self.webpackChunkklipper_docs=self.webpackChunkklipper_docs||[]).push([["41958"],{98424:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>a,default:()=>l,toc:()=>u,metadata:()=>i,assets:()=>d,contentTitle:()=>s});var i=JSON.parse('{"id":"ProductDoc/ExtensionBoard/fly-mdm/klipper","title":"Klipper Configuration","description":"Filament Runout Function Configuration","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/ProductDoc/ExtensionBoard/fly-mdm/klipper.mdx","sourceDirName":"ProductDoc/ExtensionBoard/fly-mdm","slug":"/ProductDoc/ExtensionBoard/fly-mdm/klipper","permalink":"/fly-docs-next/en/docs/ProductDoc/ExtensionBoard/fly-mdm/klipper","draft":false,"unlisted":false,"editUrl":"https://github.com/kluoyun/fly-docs-next/tree/master/docs/ProductDoc/ExtensionBoard/fly-mdm/klipper.mdx","tags":[],"version":"current","lastUpdatedBy":"Xiaok","lastUpdatedAt":1744193150000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_label":"Klipper Configuration"},"sidebar":"tutorialSidebar","previous":{"title":"Wiring Diagram","permalink":"/fly-docs-next/en/docs/ProductDoc/ExtensionBoard/fly-mdm/wiring"},"next":{"title":"Marlin Configuration","permalink":"/fly-docs-next/en/docs/ProductDoc/ExtensionBoard/fly-mdm/marlin"}}'),o=t(85893),r=t(50065);let a={sidebar_position:4,sidebar_label:"Klipper Configuration"},s="Klipper Configuration",d={},u=[{value:"Filament Runout Function Configuration",id:"filament-runout-function-configuration",level:2},{value:"Filament Jam Function Configuration",id:"filament-jam-function-configuration",level:2}];function c(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",pre:"pre",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"klipper-configuration",children:"Klipper Configuration"})}),"\n",(0,o.jsx)(n.h2,{id:"filament-runout-function-configuration",children:"Filament Runout Function Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cfg",children:'[filament_switch_sensor mdm_switch_sensor]\nswitch_pin: ^PG12 # Replace with your own pin connected to the filament runout detection pin\npause_on_runout: True\n# When set to "True", the printer will pause immediately after detecting depletion.\n# Note that if pause_on_runout is False and no runout_gcode is defined,\n# the depletion detection will be disabled.\n# Default is True.\n\nrunout_gcode:\n    PAUSE\n    M118 Filament out\n# insert_gcode:\nevent_delay: 1.0\n# Minimum delay time (in seconds) between events.\n# Events triggered within this period will be ignored by default.\n# Default is 3 seconds.\n\npause_delay: 0.5\n# Delay time (in seconds) between the pause command and the execution of runout_gcode.\n# If using OctoPrint, increasing this delay may improve the reliability of the pause.\n# If OctoPrint exhibits strange pause behavior, consider increasing this delay.\n# Default is 0.5 seconds.\n\n'})}),"\n",(0,o.jsx)(n.h2,{id:"filament-jam-function-configuration",children:"Filament Jam Function Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cfg",children:"[filament_motion_sensor mdm_motion_sensor]\nswitch_pin: PD6       # Replace with your own pin connected to the filament jam detection pin\ndetection_length: 3.5 # Minimum distance to trigger a change in the state of the switch_pin\nextruder: extruder\n# The extruder associated with this sensor.\n# This parameter must be provided.\n\n# pause_on_runout:\nrunout_gcode:\n    PAUSE\n    M118 Filament jam\n# insert_gcode:\nevent_delay: 3.0\npause_delay: 1.0\n\n"})})]})}function l(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},50065:function(e,n,t){t.d(n,{Z:()=>s,a:()=>a});var i=t(67294);let o={},r=i.createContext(o);function a(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);