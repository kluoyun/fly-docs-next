"use strict";(self.webpackChunkklipper_docs=self.webpackChunkklipper_docs||[]).push([["94476"],{1287:function(e,n,t){t.d(n,{ZP:function(){return c},d$:function(){return o}});var i=t(85893),r=t(50065);let o=[];function s(e){let n={admonition:"admonition",li:"li",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsx)(n.admonition,{title:"Infinite Position Usage Tips",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Infinite position usage requires occupying a limit port; normally, the first drive position uses IO1, the second drive position uses IO2, and so on."}),"\n",(0,i.jsx)(n.li,{children:"When using infinite positions, please ensure not to connect anything to the corresponding limit port."}),"\n",(0,i.jsx)(n.li,{children:"For some FLY mainboards that are directly connected to the drive port, please check if DIAG is directly connected to the corresponding pin."}),"\n"]})})}function c(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}},65290:function(e,n,t){t.r(n),t.d(n,{default:()=>p,frontMatter:()=>c,metadata:()=>i,assets:()=>l,toc:()=>a,contentTitle:()=>d});var i=JSON.parse('{"id":"ProductDoc/ModuleDrive/tmc2209","title":"TMC 2209","description":"Basic Parameters","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/ProductDoc/ModuleDrive/tmc2209.mdx","sourceDirName":"ProductDoc/ModuleDrive","slug":"/ProductDoc/ModuleDrive/tmc2209","permalink":"/fly-docs-next/en/docs/ProductDoc/ModuleDrive/tmc2209","draft":false,"unlisted":false,"editUrl":"https://github.com/kluoyun/fly-docs-next/tree/master/docs/ProductDoc/ModuleDrive/tmc2209.mdx","tags":[],"version":"current","lastUpdatedBy":"Xiaok","lastUpdatedAt":1748320534000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/fly-docs-next/en/docs/ProductDoc/ModuleDrive/"},"next":{"title":"TMC 2240","permalink":"/fly-docs-next/en/docs/ProductDoc/ModuleDrive/tmc2240"}}'),r=t("85893"),o=t("50065"),s=t("1287");let c={sidebar_position:1},d="TMC 2209",l={},a=[{value:"Basic Parameters",id:"basic-parameters",level:2},{value:"Motherboard Jumper Instructions",id:"motherboard-jumper-instructions",level:2},{value:"TMC2209 Reference Configuration",id:"tmc2209-reference-configuration",level:2},{value:"Infinite Position Usage Instructions",id:"infinite-position-usage-instructions",level:2},...s.d$];function u(e){let n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components},{Button:i,ImageView:c}=n;return i||h("Button",!0),c||h("ImageView",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tmc-2209",children:"TMC 2209"})}),"\n",(0,r.jsx)(c,{image:t(91930).Z,size:"80%",align:"center"}),"\n",(0,r.jsx)(n.h2,{id:"basic-parameters",children:"Basic Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Input voltage: 12V-24V"}),"\n",(0,r.jsx)(n.li,{children:"Suitable for: Marlin/Klipper/RRF firmware"}),"\n",(0,r.jsx)(n.li,{children:"The motor is not prone to losing steps"}),"\n",(0,r.jsx)(n.li,{children:"Supports silent mode"}),"\n",(0,r.jsx)(n.li,{children:"Large area fan thermal pad to reduce drive operating temperature"}),"\n",(0,r.jsx)(n.li,{children:"Drive mode support: TMC: UART"}),"\n",(0,r.jsx)(n.li,{children:"Supports motor stall detection"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"motherboard-jumper-instructions",children:"Motherboard Jumper Instructions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"TMC2209 uses UART jumper"}),"\n",(0,r.jsx)(c,{image:t(65376).Z,size:"100%",align:"center"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"The UART pin of the FLY driver is the fourth pin from the left downwards, and the PDN pin is the UART pin. If the motherboard does not correspond to the pin position, UART cannot be used"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["For other drivers, if the fifth pin is used, our motherboard can be used as a reference to solve this problem ",(0,r.jsx)(i,{variant:"contained",disableElevation:!0,component:"a",rel:"noopener",href:"/docs/DebugDoc/faq/tmc#unable-to-read-tmc-uart-stepper_x-register-ifcnt%E6%88%96%E8%80%85-unable-to-read-tmc-spi-stepper_x-register-register-%E7%9A%84%E9%94%99%E8%AF%AF",children:"UART usage solution"})]}),"\n",(0,r.jsx)(c,{image:t(25656).Z,size:"80%",align:"center"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"tmc2209-reference-configuration",children:"TMC2209 Reference Configuration"}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsx)(n.p,{children:"The drive sampling resistor is 0.110, please do not set it incorrectly"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cfg",children:"[tmc2209 stepper_x]\nuart_pin: \ninterpolate: False\nrun_current: 0.8                    # Motor running current value (unit: mA)\nsense_resistor: 0.110               # Drive sampling resistor do not change\nstealthchop_threshold: 0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"infinite-position-usage-instructions",children:"Infinite Position Usage Instructions"}),"\n",(0,r.jsx)(s.ZP,{}),"\n",(0,r.jsx)(n.admonition,{title:"Infinite Position Usage Tips",type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The original ",(0,r.jsx)(n.code,{children:"endstop_pin:"})," needs to be shielded or deleted, and add ",(0,r.jsx)(n.code,{children:"endstop_pin: tmc2209_stepper_x:virtual_endstop"})]}),"\n",(0,r.jsxs)(n.li,{children:["After configuring ",(0,r.jsx)(n.code,{children:"diag_pin:"}),", the limit status is refreshed as not triggered"]}),"\n",(0,r.jsxs)(n.li,{children:["Configuring ",(0,r.jsx)(n.code,{children:"driver_SGTHRS:"})," requires you to test a suitable value by yourself"]}),"\n"]})}),"\n",(0,r.jsx)(c,{image:t(54411).Z,size:"80%",align:"center"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reference Configuration"}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The back of FLY 2209 has a DIP switch, which needs to be switched to the other side"}),"\n",(0,r.jsx)(n.li,{children:"FLY 2209C is directly connected to the drive, DIAG does not need to perform this step"}),"\n"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cfg",children:"[stepper_x]\n# endstop_pin:PF3\nendstop_pin: tmc2209_stepper_x:virtual_endstop\nhoming_retract_dist: 0        # Retraction without changing to 0 may cause homing failure\n\n[tmc2209 stepper_x]\ndiag_pin: ^\ndriver_SGTHRS: 100\n\n"})})]})}function p(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}function h(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},91930:function(e,n,t){t.d(n,{Z:function(){return i}});let i=t.p+"assets/images/2209-28599a8d77bf982ea9cec5579c7cb94b.webp"},54411:function(e,n,t){t.d(n,{Z:function(){return i}});let i=t.p+"assets/images/2209diag-262cd788fbf99f89f3dfc8ec68d68e8c.webp"},65376:function(e,n,t){t.d(n,{Z:function(){return i}});let i=t.p+"assets/images/jumper-b7f0cad58ee1720512eaebc40deee431.webp"},25656:function(e,n,t){t.d(n,{Z:function(){return i}});let i=t.p+"assets/images/uart1-602d6fd2f11086c68218afd60014228b.webp"},50065:function(e,n,t){t.d(n,{Z:function(){return c},a:function(){return s}});var i=t(67294);let r={},o=i.createContext(r);function s(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);