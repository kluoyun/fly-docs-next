"use strict";(self.webpackChunkklipper_docs=self.webpackChunkklipper_docs||[]).push([["86341"],{53033:function(e,i,n){n.r(i),n.d(i,{metadata:()=>t,contentTitle:()=>d,default:()=>u,assets:()=>a,toc:()=>c,frontMatter:()=>s});var t=JSON.parse('{"id":"ProductDoc/MainBoard/fly-d/fly-d7/wiring","title":"PIN Description","description":"### Mainboard Driver Jumper","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/ProductDoc/MainBoard/fly-d/fly-d7/wiring.mdx","sourceDirName":"ProductDoc/MainBoard/fly-d/fly-d7","slug":"/ProductDoc/MainBoard/fly-d/fly-d7/wiring","permalink":"/fly-docs-next/en/docs/ProductDoc/MainBoard/fly-d/fly-d7/wiring","draft":false,"unlisted":false,"editUrl":"https://github.com/kluoyun/fly-docs-next/tree/master/docs/ProductDoc/MainBoard/fly-d/fly-d7/wiring.mdx","tags":[],"version":"current","lastUpdatedBy":"Xiaok","lastUpdatedAt":1741075603000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_label":"Wiring Reference"},"sidebar":"tutorialSidebar","previous":{"title":"Flashing Katapult Firmware","permalink":"/fly-docs-next/en/docs/ProductDoc/MainBoard/fly-d/fly-d7/flash/bl"},"next":{"title":"Klipper\u914D\u7F6E\u53C2\u8003","permalink":"/fly-docs-next/en/docs/ProductDoc/MainBoard/fly-d/fly-d7/cfg"}}'),r=n("52676"),o=n("79938");let s={sidebar_position:4,sidebar_label:"Wiring Reference"},d="PIN Description",a={},c=[{value:"Mainboard Driver Jumper",id:"mainboard-driver-jumper",level:3}];function l(e){let i={admonition:"admonition",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components},{ImageView:t}=i;return!t&&function(e,i){throw Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ImageView",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"pin-description",children:"PIN Description"})}),"\n",(0,r.jsx)(t,{image:n(66944).Z,size:"80%",align:"center"}),"\n",(0,r.jsx)(i.h3,{id:"mainboard-driver-jumper",children:"Mainboard Driver Jumper"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"STEP/DIR mode."})," In this mode, the subdivision is set by using a jumper cap, and the current is adjusted by potentiometer. The most common ones are A4988, 8825 drivers which require referring to the subdivision configuration table provided by the manufacturer, then setting the subdivision via the jumper cap."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"UART mode."})," The most common drivers using this mode are: TMC2208, TMC2209, TMC2226, etc. These driver chips can communicate asynchronously with the main controller via UART serial communication, and settings such as subdivision, operating current, and silent mode can be configured by modifying the configuration file."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"SPI mode."})," The most common drivers using this mode are: TMC5160, TMC2130, TMC2240, etc. Settings such as subdivision, operating current, and silent mode can also be configured by modifying the configuration file."]}),"\n"]}),"\n",(0,r.jsx)(i.h1,{id:"mainboard-wiring",children:"Mainboard Wiring"}),"\n",(0,r.jsx)(i.admonition,{title:"Note",type:"warning",children:(0,r.jsx)(i.p,{children:"Due to the high resolution of the image, it cannot be clearly viewed on the web page. Please place the mouse cursor over the wiring diagram, right-click, and save the image to the desktop to view!"})}),"\n",(0,r.jsx)(t,{image:n(48143).Z,size:"80%",align:"center"})]})}function u(e={}){let{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},48143:function(e,i,n){n.d(i,{Z:function(){return t}});let t=n.p+"assets/images/d7_wiring-275187378d337810f25e96666e73093a.webp"},66944:function(e,i,n){n.d(i,{Z:function(){return t}});let t=n.p+"assets/images/pin-62e383bfa3f9fedff088b46c96d05338.webp"},79938:function(e,i,n){n.d(i,{Z:function(){return d},a:function(){return s}});var t=n(75271);let r={},o=t.createContext(r);function s(e){let i=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);