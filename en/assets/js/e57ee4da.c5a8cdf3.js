"use strict";(self.webpackChunkklipper_docs=self.webpackChunkklipper_docs||[]).push([["63847"],{50065:function(e,n,r){r.d(n,{Z:()=>l,a:()=>t});var o=r(67294);let i={},s=o.createContext(i);function t(e){let n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(s.Provider,{value:n},e.children)}},86790:function(e,n,r){r.r(n),r.d(n,{frontMatter:()=>t,default:()=>u,contentTitle:()=>l,assets:()=>c,toc:()=>a,metadata:()=>o});var o=JSON.parse('{"id":"ProductDoc/ToolBoard/fly-usb-adxl/fly-usb-lis2dw/cfg","title":"Klipper Reference Configuration","description":"* Reference configuration","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/ProductDoc/ToolBoard/fly-usb-adxl/fly-usb-lis2dw/cfg.mdx","sourceDirName":"ProductDoc/ToolBoard/fly-usb-adxl/fly-usb-lis2dw","slug":"/ProductDoc/ToolBoard/fly-usb-adxl/fly-usb-lis2dw/cfg","permalink":"/fly-docs-next/en/docs/ProductDoc/ToolBoard/fly-usb-adxl/fly-usb-lis2dw/cfg","draft":false,"unlisted":false,"editUrl":"https://github.com/kluoyun/fly-docs-next/tree/master/docs/ProductDoc/ToolBoard/fly-usb-adxl/fly-usb-lis2dw/cfg.mdx","tags":[],"version":"current","lastUpdatedBy":"xishangyue","lastUpdatedAt":1746004502000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_label":"Reference Configuration"},"sidebar":"tutorialSidebar","previous":{"title":"Motherboard ID Reading and Viewing","permalink":"/fly-docs-next/en/docs/ProductDoc/ToolBoard/fly-usb-adxl/fly-usb-lis2dw/read-id"},"next":{"title":"LIS2DW","permalink":"/fly-docs-next/en/docs/ProductDoc/ToolBoard/fly-usb-adxl/fly-usb-lis2dw/adxl345"}}'),i=r(85893),s=r(50065);let t={sidebar_position:4,sidebar_label:"Reference Configuration"},l="Klipper Reference Configuration",c={},a=[];function d(e){let n={code:"code",h1:"h1",header:"header",li:"li",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"klipper-reference-configuration",children:"Klipper Reference Configuration"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Reference configuration","\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cfg",children:"[mcu LIS]\nserial: /dev/serial/by-id/usb-Klipper_rp2040_XXXXXXXXXXXXXXXXXXXXX\n### To find the USB firmware id, run: ls -l /dev/serial/by-id/\n### Replace /dev/serial/by-id/usb-Klipper_rp2040_XXXXXXXXXXXXXXXXXXXXX with the id you find\n\n[lis2dw]\ncs_pin: LIS:gpio9\nspi_software_sclk_pin: LIS:gpio10\nspi_software_mosi_pin: LIS:gpio11\nspi_software_miso_pin: LIS:gpio12\n\n[resonance_tester]\naccel_chip: lis2dw\nprobe_points: 150, 150, 20        # Coordinates for resonance testing\nmin_freq: 5                       # Minimum frequency for resonance test\nmax_freq: 133                     # Maximum frequency for resonance test\naccel_per_hz: 75                  # Acceleration per Hz (mm/sec). Acceleration = accel_per_hz * frequency. Reduce this value if resonance is too strong. Default is 75.\nhz_per_sec: 1                     # Test speed. Lower values increase test time, higher values reduce accuracy. (Hz/sec == sec^-2), default is 1\n"})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);