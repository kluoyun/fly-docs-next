"use strict";(self.webpackChunkklipper_docs=self.webpackChunkklipper_docs||[]).push([["19298"],{189:function(n,e,t){t.r(e),t.d(e,{metadata:()=>r,contentTitle:()=>o,default:()=>A,assets:()=>i,toc:()=>s,frontMatter:()=>a});var r=JSON.parse('{"id":"DebugDoc/ref-config/idex","title":"idex","description":"slicer \uC2DC\uC791 \uCF54\uB4DC \u7531\u54D4\u54E9\u54D4\u54E9up\u4E3B muimoon\u5973\u58EB\u63D0\u4F9B:","source":"@site/i18n/ko/docusaurus-plugin-content-docs/current/DebugDoc/ref-config/idex.mdx","sourceDirName":"DebugDoc/ref-config","slug":"/DebugDoc/ref-config/idex","permalink":"/fly-docs-next/ko/docs/DebugDoc/ref-config/idex","draft":false,"unlisted":false,"editUrl":"https://github.com/kluoyun/fly-docs-next/tree/master/docs/DebugDoc/ref-config/idex.mdx","tags":[],"version":"current","lastUpdatedBy":"Xiaok","lastUpdatedAt":1743130497000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"\uB4C0\uC5BC x\uCD95/\uC778\uB371\uC2A4 \uCC38\uC870 \uC124\uC815"},"sidebar":"debugdocSidebar","previous":{"title":"\uD504\uB9B0\uD130 \uC2DC\uC791 \uC628\uB3C4 \uBD88\uC548\uC815 \uB300\uAE30 \uC2DC\uAC04\uC774 \uB108\uBB34 \uAE38\uB2E4","permalink":"/fly-docs-next/ko/docs/DebugDoc/ref-config/m109"},"next":{"title":"\uC5F4 \uC800\uD56D \uD5C8\uC6A9\uCE58 \uC124\uC815","permalink":"/fly-docs-next/ko/docs/DebugDoc/ref-config/verify_heater"}}'),E=t("52676"),_=t("79938");let a={sidebar_position:3,sidebar_label:"\uB4C0\uC5BC x\uCD95/\uC778\uB371\uC2A4 \uCC38\uC870 \uC124\uC815"},o=void 0,i={},s=[{value:"slicer \uC2DC\uC791 \uCF54\uB4DC \u7531\u54D4\u54E9\u54D4\u54E9up\u4E3B muimoon\u5973\u58EB\u63D0\u4F9B:",id:"slicer-\uC2DC\uC791-\uCF54\uB4DC-\u7531\u54D4\u54E9\u54D4\u54E9up\u4E3B-muimoon\u5973\u58EB\u63D0\u4F9B",level:2},{value:"\uB450 \uBC88\uC9F8 \uD504\uB9B0\uD305 \uD5E4\uB4DC \uC124\uC815",id:"\uB450-\uBC88\uC9F8-\uD504\uB9B0\uD305-\uD5E4\uB4DC-\uC124\uC815",level:2}];function d(n){let e={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,_.a)(),...n.components};return(0,E.jsxs)(E.Fragment,{children:[(0,E.jsx)(e.h2,{id:"slicer-\uC2DC\uC791-\uCF54\uB4DC-\u7531\u54D4\u54E9\u54D4\u54E9up\u4E3B-muimoon\u5973\u58EB\u63D0\u4F9B",children:"slicer \uC2DC\uC791 \uCF54\uB4DC \u7531\u54D4\u54E9\u54D4\u54E9up\u4E3B muimoon\u5973\u58EB\u63D0\u4F9B:"}),"\n",(0,E.jsx)(e.pre,{children:(0,E.jsx)(e.code,{className:"language-bash",children:"M190 S\u3010bed_temperature_initial_layer_single\u3011\n{if is_extruder_used\u30100\u3011}\nM104 S{first_layer_temperature\u30100\u3011+standby_temperature_delta} T0\n{endif}\n{if is_extruder_used\u30101\u3011}\nM104 S{first_layer_temperature\u30101\u3011+standby_temperature_delta} T1\n{endif}\n"})}),"\n",(0,E.jsx)(e.h2,{id:"\uB450-\uBC88\uC9F8-\uD504\uB9B0\uD305-\uD5E4\uB4DC-\uC124\uC815",children:"\uB450 \uBC88\uC9F8 \uD504\uB9B0\uD305 \uD5E4\uB4DC \uC124\uC815"}),"\n",(0,E.jsx)(e.pre,{children:(0,E.jsx)(e.code,{className:"language-cfg",children:"[dual_carriage]\naxis: x\nstep_pin: PA15\ndir_pin: PA14\nenable_pin: !PA13\nrotation_distance: 40\nmicrosteps: 16\nfull_steps_per_rotation: 200\nendstop_pin: ^!PB4\nposition_endstop: 359.35\nposition_min: 0\nposition_max: 360\nhoming_speed: 50\nhoming_retract_dist: 5\nstep_pulse_duration: 0.000004\n#--------------------------------------------------------------------\n[tmc2209 dual_carriage]\nuart_pin: PC10\ninterpolate: False\nrun_current: 0.8\nsense_resistor: 0.110\nstealthchop_threshold: 0\n"})}),"\n",(0,E.jsx)(e.p,{children:"\uBCF5\uC0AC\uD558\uAC70\uB098 \uBBF8\uB7EC\uB9C1 \uB9E4\uD06C\uB85C\uB97C \uC0AC\uC6A9\uD558\uB824\uBA74 \uC2AC\uB77C\uC774\uC2F1\uC5D0 \uD574\uB2F9 \uCF54\uB4DC\uB97C \uCC38\uC870\uD574\uC57C \uD569\uB2C8\uB2E4."}),"\n",(0,E.jsxs)(e.ul,{children:["\n",(0,E.jsx)(e.li,{children:"ACTIVATE_COPY_MODE \uBCF5\uC0AC \uBAA8\uB4DC"}),"\n",(0,E.jsx)(e.li,{children:"ACTIVATE_MIRROR_MODE \uBBF8\uB7EC\uB9C1 \uBAA8\uB4DC"}),"\n"]}),"\n",(0,E.jsx)(e.pre,{children:(0,E.jsx)(e.code,{className:"language-cfg",children:"[gcode_macro PARK_extruder1]\ngcode:\n    SAVE_GCODE_STATE NAME=park1\n    G90\n    G1 X200\n    RESTORE_GCODE_STATE NAME=park1\n\n[gcode_macro T1]\ngcode:\n    PARK_{printer.toolhead.extruder}\n    ACTIVATE_EXTRUDER EXTRUDER=extruder1\n    SET_DUAL_CARRIAGE CARRIAGE=1\n    SET_GCODE_OFFSET Y=15\n\n# \uBCF5\uC0AC \uBAA8\uB4DC\uB97C \uD65C\uC131\uD654\uD558\uB294 \uB3C4\uC6B0\uBBF8 \uC2A4\uD06C\uB9BD\uD2B8\n[gcode_macro ACTIVATE_COPY_MODE]\ngcode:\n    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY\n    G1 X0\n    ACTIVATE_EXTRUDER EXTRUDER=extruder\n    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY\n    G1 X100\n    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY\n    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder\n\n# \uBBF8\uB7EC\uB9C1 \uBAA8\uB4DC\uB97C \uD65C\uC131\uD654\uD558\uB294 \uB3C4\uC6B0\uBBF8 \uC2A4\uD06C\uB9BD\uD2B8\n[gcode_macro ACTIVATE_MIRROR_MODE]\ngcode:\n    SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY\n    G1 X0\n    ACTIVATE_EXTRUDER EXTRUDER=extruder\n    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY\n    G1 X200\n    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR\n    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder\n"})}),"\n",(0,E.jsxs)(e.ul,{children:["\n",(0,E.jsx)(e.li,{children:"\uB450 \uC0C9\uC0C1 \uC124\uC815"}),"\n"]}),"\n",(0,E.jsx)(e.pre,{children:(0,E.jsx)(e.code,{className:"language-cfg",children:'[gcode_macro CANCEL_PRINT]\nrename_existing: BASE_CANCEL_PRINT\ngcode:\n    TURN_OFF_HEATERS\n    CLEAR_PAUSE\n    SDCARD_RESET_FILE\n    BASE_CANCEL_PRINT\n\n[gcode_macro PAUSE]\nrename_existing: BASE_PAUSE\ngcode:\n    ##### set defaults #####\n    {% set x = params.X|default(100) %}      #edit to your park position\n    {% set y = params.Y|default(100) %}      #edit to your park position\n    {% set lift_z = params.Z|default(50)| float | abs %} #edit to your desired z lift\n    {% set e = params.E|default(1) %}        #edit to your retract length\n    ##### calculate save lift position #####\n    {% set max_z = (printer.toolhead.axis_maximum.z|float ) %} #leave some room for gcode z offset\n    {% set act_z = printer.toolhead.position.z|float %}\n 	{% set new_z = act_z + lift_z %}\n	{% if new_z >  max_z %}\n		new_z = max_z\n	{% endif %}\n    SAVE_GCODE_STATE NAME=PAUSE_state\n    BASE_PAUSE\n    M83 ; set E to rel mode\n    {% if printer.extruder.can_extrude|lower == \'true\' %}\n      G1 E-{e} F2100\n    {% else %}\n      RESPOND MSG="Extruder not hot enough"\n    {% endif %}\n    {% if "xyz" in printer.toolhead.homed_axes %}    \n      G0 Z{new_z} X{x} Y{y} F6000\n    {% else %}\n      RESPOND MSG="Printer not homed"\n    {% endif %}\n\n\n[gcode_macro RESUME]\nrename_existing: BASE_RESUME\ngcode:\n    ##### set defaults #####\n#    {% set e = params.E|default(1) %} #edit to your retract length\n#    M83 ; set E to rel mode\n#    {% if printer.extruder.can_extrude|lower == \'true\' %}\n#      G1 E-{e} F2100\n#    {% else %}\n#      RESPOND MSG="Extruder not hot enough"\n#    {% endif %}\n    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1\n    BASE_RESUME\n\n################################################################################\n################################################################################\n\n# \uB3C4\uC6B0\uBBF8 \uC2A4\uD06C\uB9BD\uD2B8\uB97C \uC774\uC6A9\uD558\uC5EC \uCE74\uB808\uC9C0 \uC8FC\uCC28 (T0 \uBC0F T1 \uB9E4\uD06C\uB85C\uC5D0\uC11C \uD638\uCD9C\uB428)\n[gcode_macro PARK_extruder]\ngcode:\n	RESPOND MSG="\uC88C\uCE21 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 \uC8FC\uCC28"\n	#\uCCAB \uBC88\uC9F8 \uCE74\uB808\uC9C0\uB97C \uD655\uC2E4\uD788 \uC774\uB3D9\uC2DC\uD0A4\uAE30 \uC704\uD574\n	SET_DUAL_CARRIAGE CARRIAGE=0\n	{% if not "x" in printer.toolhead.homed_axes %}\n	    RESPOND MSG="X \uD648 \uC704\uCE58 \uD655\uC778"\n	    G28 X\n	{% endif %}\n\n    SAVE_GCODE_STATE NAME=park0\n    G90\n	SET_GCODE_OFFSET X=0 Y=0 #Z=0\n    G1 X{printer.configfile.settings.stepper_x.position_min} F12000\n    RESTORE_GCODE_STATE NAME=park0\n\n[gcode_macro PARK_extruder1]\ngcode:\n	RESPOND MSG="\uC6B0\uCE21 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 \uC8FC\uCC28"\n	#\uB450 \uBC88\uC9F8 \uCE74\uB808\uC9C0\uB97C \uD655\uC2E4\uD788 \uC774\uB3D9\uC2DC\uD0A4\uAE30 \uC704\uD574. \uACB0\uAD6D \uC5B4\uB290 \uCE74\uB808\uC9C0\uAC00 \uD65C\uC131\uD654\uB418\uC5C8\uB294\uC9C0 \uC54C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4\n	SET_DUAL_CARRIAGE CARRIAGE=1\n	{% if not "x" in printer.toolhead.homed_axes %}\n	    RESPOND MSG="X \uD648 \uC704\uCE58 \uD655\uC778"\n	    G28 X\n	{% endif %}\n\n    SAVE_GCODE_STATE NAME=park1\n    G90\n	SET_GCODE_OFFSET X=0 Y=0 #Z=0\n    G1 X{printer.configfile.settings.dual_carriage.position_max} F12000\n    RESTORE_GCODE_STATE NAME=park1\n\n\n[gcode_macro x_xoffset]\n# \uB3C4\uC6B0\uBBF8 \uC2A4\uD06C\uB9BD\uD2B8, \uBCC0\uC218 xoffset\uC774 \uB9E4\uD06C\uB85C \uC2E4\uD589 \uC911 \uBCC0\uACBD\uB420 \uAC83\uC774\uBBC0\uB85C \uD544\uC694\uD569\uB2C8\uB2E4\n# \uADF8\uB9AC\uACE0 \uB9E4\uD06C\uB85C \uD655\uC7A5\uC740 \uADF8 \uC804\uC5D0 \uC774\uB8E8\uC5B4\uC9D1\uB2C8\uB2E4\ngcode:\n	{% set offset = printer["gcode_macro set_stepper_x_range"].xoffset %}\n	RESPOND MSG="Xoffset\uC774 { offset }\uB85C \uC124\uC815\uB429\uB2C8\uB2E4"\n    SET_GCODE_OFFSET Y=0 X={ offset } #Z=0\n	\n\n\n[gcode_macro set_stepper_x_range]\nvariable_xoffset: 0\nvariable_range_set: 0\ngcode:\n    RESPOND MSG="\uC88C\uCE21 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 x\uCD95 \uC6D0\uC810 \uC124\uC815"\n#	{ action_respond_info("Extruder1 temperature target: %s" % printer.extruder1.target ) }\n	RESPOND MSG="\uC5D1\uC2A4\uD2B8\uB8E8\uB3541 \uC628\uB3C4 \uBAA9\uD45C: { printer.extruder1.target }"\n	{% if   printer.extruder1.target|int > 0 %}\n 		RESPOND MSG="\uC6B0\uCE21 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 \uD65C\uC131\uD654"\n	    #{% set offset= 17 %}\n	    {% set offset= 0 %} #\uC65C \uC774 \uAC12\uC774 17\uB85C \uC124\uC815\uB418\uC5C8\uB294\uC9C0 \uBAA8\uB974\uACA0\uC9C0\uB9CC \uB54C\uB54C\uB85C \uD504\uB9B0\uD2B8\uC5D0 \uBB38\uC81C\uAC00 \uC0DD\uACBC\uC2B5\uB2C8\uB2E4!\n	{% else %}\n	    {% set offset=0 %}\n	{% endif %}\n	SET_GCODE_VARIABLE MACRO=set_stepper_x_range VARIABLE=xoffset VALUE={offset}\n	RESPOND MSG="\uC88C\uCE21 \uBA38\uB9AC\uC758 X \uC6D0\uC810\uC774 {offset} mm \uC67C\uCABD \uB05D\uC73C\uB85C \uC124\uC815\uB429\uB2C8\uB2E4"\n	#\uC774 \uD504\uB9B0\uD2B8\uC5D0 \uB300\uD55C \uBC94\uC704\uAC00 \uC124\uC815\uB418\uC5B4 \uC788\uC73C\uBBC0\uB85C \uB2E4\uC2DC \uD3C9\uAC00\uB418\uC9C0 \uC54A\uB3C4\uB85D \uC54C\uB824\uC90D\uB2C8\uB2E4\n	SET_GCODE_VARIABLE MACRO=set_stepper_x_range VARIABLE=range_set VALUE=1\n\n[gcode_macro clear_stepper_x_range]\ngcode:\n    RESPOND MSG="\uC88C\uCE21 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 x\uCD95 \uC778\uC1C4 \uBC94\uC704 \uCD08\uAE30\uD654"\n	SET_GCODE_VARIABLE MACRO=set_stepper_x_range VARIABLE=xoffset VALUE=0\n	#\uC774 \uD504\uB9B0\uD2B8\uC5D0 \uB300\uD55C \uBC94\uC704\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC73C\uBBC0\uB85C \uB2E4\uC2DC \uD3C9\uAC00\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4\n	SET_GCODE_VARIABLE MACRO=set_stepper_x_range VARIABLE=range_set VALUE=0\n	\n\n# \uAE30\uBCF8 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 \uD65C\uC131\uD654\n[gcode_macro T0]\ngcode:\n	RESPOND MSG="T0 \uB3C4\uAD6C \uC120\uD0DD"\n	home_if_not\n	{% if printer.toolhead.extruder != "extruder" %}\n	    PARK_{printer.toolhead.extruder}\n	{% endif %}\n    ACTIVATE_EXTRUDER EXTRUDER=extruder\n    SET_DUAL_CARRIAGE CARRIAGE=0\n	# \uD55C \uBC88\uB9CC \uBC94\uC704 \uC124\uC815\uC744 \uC2E4\uD589\uD558\uC5EC T1 \uB300\uC0C1 \uC628\uB3C4\uAC00 0\uC73C\uB85C \uC124\uC815\uB41C \uD6C4 \uC798\uBABB \uC124\uC815\uB418\uC9C0 \uC54A\uB3C4\uB85D \uD569\uB2C8\uB2E4\n	{% if  printer["gcode_macro set_stepper_x_range"].range_set  == 0  %}\n		RESPOND MSG="\uC88C\uCE21 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 X \uBC29\uD5A5 \uC774\uB3D9 \uBC94\uC704 \uC544\uC9C1 \uC124\uC815\uB418\uC9C0 \uC54A\uC74C, \uC9C0\uAE08 \uC124\uC815\uD569\uB2C8\uB2E4"\n		set_stepper_x_range\n	{% endif %}\n	x_xoffset\n\n\n[gcode_macro T1]\ngcode:\n	RESPOND MSG="T1 \uB3C4\uAD6C \uC120\uD0DD"\n	home_if_not\n	{% if printer.toolhead.extruder != "extruder1" %}\n	    PARK_{printer.toolhead.extruder}\n	{% endif %}\n    ACTIVATE_EXTRUDER EXTRUDER=extruder1\n    SET_DUAL_CARRIAGE CARRIAGE=1\n\n    # X/Y \uC624\uD504\uC14B\uC740 \uAE30\uBCF8 \uD38C\uC6E8\uC5B4 \uBC29\uBC95\uACFC \uBC18\uB300\uC785\uB2C8\uB2E4.\n    # E2\uAC00 \uB108\uBB34 \uC67C\uCABD\uC73C\uB85C \uC778\uC1C4\uB418\uB294 \uACBD\uC6B0 X \uC624\uD504\uC14B\uC5D0 \uCD94\uAC00\uD574\uC57C \uD569\uB2C8\uB2E4.\n    # E2\uAC00 \uB108\uBB34 \uC544\uB798\uCABD\uC73C\uB85C \uC778\uC1C4\uB418\uB294 \uACBD\uC6B0 Y \uC624\uD504\uC14B\uC5D0 \uCD94\uAC00\uD574\uC57C \uD569\uB2C8\uB2E4.\n    # Z \uC624\uD504\uC14B\uC740 \uC77C\uBC18\uC801\uC73C\uB85C \uD544\uC694\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. E2\uC758 \uBB3C\uB9AC\uC801 Z \uC870\uC815\uB9CC \uCE98\uB9AC\uBE0C\uB808\uC774\uC158\uD558\uBA74 \uB429\uB2C8\uB2E4.\n    SET_GCODE_OFFSET X=3.80 Y=0.50 #Z=0\n\n[gcode_macro home_if_not ]\ngcode:\n	{% if printer.toolhead.homed_axes != \'xyz\' %}\n	  G28\n    {% endif %}\n\n[gcode_macro probeon]\ngcode:\n 	SET_GCODE_VARIABLE MACRO=bedmesh VARIABLE=probe_installed VALUE=1\n 	RESPOND MSG="\uC67C\uCABD \uD5E4\uB4DC\uC5D0 \uD504\uB85C\uBE0C \uC124\uCE58 \uAE30\uB85D"\n\n[gcode_macro probeoff]\ngcode:\n 	SET_GCODE_VARIABLE MACRO=bedmesh VARIABLE=probe_installed VALUE=0\n 	RESPOND MSG="\uC67C\uCABD \uD5E4\uB4DC\uC5D0\uC11C \uD504\uB85C\uBE0C \uC81C\uAC70 \uAE30\uB85D"\n\n[gcode_macro PRIME_LINE]\ngcode: \n    RESPOND MSG="\uD504\uB77C\uC784 \uB77C\uC778 \uC778\uC1C4"\n\n    {% set x = params.X|default(2)|float %}\n    {% set y = params.Y|default(70)|float %}\n	{% set z = params.Z|default(0.2)|float %}\n    {% set xline = params.XLINE|default(0.8)|float %}\n    {% set yline = params.YLINE|default(120)|float %}\n	{% set eMultiplier = 0.15 * z  %}\n    SAVE_GCODE_STATE NAME=prime_line\n \n	M117 \uD504\uB77C\uC784 \uB77C\uC778\n\n    G90 ; XYZ\uB97C \uC808\uB300 \uC88C\uD45C\uB85C \uC124\uC815\n	M83 ; E\uB97C \uC0C1\uB300 \uC88C\uD45C\uB85C \uC124\uC815\n    # Z \uCD95 \uC774\uB3D9\n    G1 Z0.3 F3000 ; Z \uCD95 \uC704\uB85C \uC774\uB3D9\n    # \uD504\uB77C\uC784 \uC704\uCE58\uB85C \uC774\uB3D9\n	G0 Y{y} Z{z}\n    G0 X{x} ; \uC2DC\uC791 \uC704\uCE58\uB85C \uC774\uB3D9. \uCF54\uB108 \uD074\uB9BD\uC744 \uD53C\uD558\uAE30 \uC704\uD574 \uC815\uBC29\uD615 \uC774\uB3D9\n	G1 Y{y + yline} E{eMultiplier * yline} ; \uCCAB \uBC88\uC9F8 \uC904 \uADF8\uB9AC\uAE30\n    G1 X{x + xline} E{eMultiplier * xline} ; \uC57D\uAC04 \uC606\uC73C\uB85C \uC774\uB3D9\n    G1 Y{y + 20} E{eMultiplier * (yline - 20)} ; \uB450 \uBC88\uC9F8 \uC904 \uADF8\uB9AC\uAE30, \uD558\uC9C0\uB9CC \uC6D0\uC810\uC73C\uB85C \uB3CC\uC544\uAC00\uC9C0 \uC54A\uC544\uC11C \uAE68\uB057\uD55C \uBD80\uBD84\uC744 \uD53C\uD558\uB3C4\uB85D \uD568\n#	G1 E-0.5 F300\n    G1 Z0.5 F3000 ; Z \uCD95 \uC704\uB85C \uC774\uB3D9\n\n	RESTORE_GCODE_STATE NAME=prime_line\n\n[gcode_macro prepare_toolheads ]\ngcode:\n    RESPOND MSG="\uD234\uD5E4\uB4DC \uC900\uBE44"\n	# BED_MESH_PROFILE LOAD=70c\n	# \uC808\uB300 \uC88C\uD45C \uC0AC\uC6A9\n    G90\n	# E \uB9AC\uC14B\n	G92 E0\n	# \uC5D1\uC2A4\uD2B8\uB8E8\uB354\uB97C \uC0C1\uB300 \uC88C\uD45C \uBAA8\uB4DC\uB85C \uC124\uC815\n	M83\n	home_if_not\n	# \uAC01 \uC0C8\uB85C\uC6B4 \uC778\uC1C4 \uC2DC\uC791 \uC2DC \uBC94\uC704 \uBA85\uC2DC\uC801\uC73C\uB85C \uC124\uC815\n	set_stepper_x_range\n	{% if   printer.extruder.target|int > 0 %}\n	    RESPOND MSG="T0 \uC900\uBE44"\n		T0\n		SAVE_GCODE_STATE NAME=prime_ext0 \n		# \uD56D\uC0C1 \uAC00\uC7A5 \uC67C\uCABD\uC5D0\uC11C \uD504\uB77C\uC784 \uB77C\uC778 \uC778\uC1C4\n		SET_GCODE_OFFSET X=0 Y=0 Z=0\n		G0 X-10 Y35 Z0.5  F9000\n		# \uACF5\uAE30\uC5D0\uC11C \uD504\uB77C\uC784\n		G1 E5 F300\n		PRIME_LINE X=3 Y=35 Z=0.2 YLINE=100\n		RESTORE_GCODE_STATE NAME=prime_ext0\n	{% endif %}\n	{% if   printer.extruder1.target|int > 0 %}\n	    RESPOND MSG="T1 \uC900\uBE44"\n		T1\n		G0 X225 Y35 Z0.5 F9000\n		G1	E5 F300\n		PRIME_LINE X=200 Y=35 Z=0.2 YLINE=100\n	{% endif %}\n	# \uB9E4\uD06C\uB85C\uAC00 \uD638\uCD9C\uB418\uC5C8\uC744 \uB54C \uB3C4\uAD6C\uD5E4\uB4DC\uB97C \uC6D0\uB798 \uC0C1\uD0DC\uB85C \uC124\uC815\n	# \uC801\uC5B4\uB3C4 \uC544\uC774\uB514\uC544\uBA54\uC774\uCEE4\uB294 \uC0AC\uC6A9\uC790 \uC815\uC758 \uB9E4\uD06C\uB85C\uB97C \uD638\uCD9C\uD558\uAE30 \uC804\uC5D0 T0/T1\uC744 \uC124\uC815\uD558\uBBC0\uB85C,\n	# \uC5B4\uB5A4 \uB3C4\uAD6C\uD5E4\uB4DC\uAC00 \uC124\uC815\uB418\uC5C8\uB294\uC9C0 \uC54C\uACE0 \uACC4\uC18D\uD558\uAE30 \uC804\uC5D0 \uADF8\uAC83\uC744 \uC804\uD658\uD574\uC57C \uD569\uB2C8\uB2E4\n	# Jinja \uD655\uC7A5\uC740 \uC2E4\uC81C\uB85C \uC2E4\uD589\uB418\uAE30 \uC804\uC5D0 \uC774\uB8E8\uC5B4\uC9C0\uBBC0\uB85C,\n	# \uC870\uAC74\uBB38\uC758 printer.toolhead.extruder\uB294 \uB3D9\uC801\uC73C\uB85C \uBCC0\uACBD\uB418\uC9C0 \uC54A\uACE0 \uD638\uCD9C \uC2DC \uC6D0\uB798 \uAC12\uC785\uB2C8\uB2E4.\n	\n	{% if printer.toolhead.extruder == "extruder1" %}\n		T1\n	{% else %}\n		T0\n	{% endif %}\n	# \uC5D1\uC2A4\uD2B8\uB8E8\uB354\uB97C \uC808\uB300 \uC88C\uD45C \uBAA8\uB4DC\uB85C \uC124\uC815\n	M82\n#	{% if  ( (printer.extruder.target|int > 0) and (printer.extruder1.target|int > 0) ) %}\n#		# \uB450 \uAC1C\uC758 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 \uC0AC\uC6A9, \uC544\uBB34 \uC791\uC5C5\uB3C4 \uD558\uC9C0 \uC54A\uC74C\n#		RESPOND MSG="\uB450 \uAC1C\uC758 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 \uC0AC\uC6A9, \uC544\uC774\uB514\uC544\uBA54\uC774\uCEE4\uB294 \uD68C\uC218\uB97C \uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4"\n#	{% else %}\n#	 	# \uC544\uC774\uB514\uC544\uBA54\uC774\uCEE4\uB294 \uC2DC\uC791 \uC2DC \uD68C\uC218\uB97C \uAC15\uC694\uD569\uB2C8\uB2E4. \uC774\uC81C \uADF8\uAC83\uC744 \uC774\uBBF8 \uD55C \uAC83\uCC98\uB7FC \uC0DD\uAC01\uD558\uAC8C \uB9CC\uB4ED\uB2C8\uB2E4. \uC9C0\uC800\uBD84\uD55C \uD301, \uB124.\n#		RESPOND MSG="\uB450 \uAC1C\uC758 \uC5D1\uC2A4\uD2B8\uB8E8\uB354 \uC911 \uD558\uB098 \uC0AC\uC6A9, \uC544\uC774\uB514\uC544\uBA54\uC774\uCEE4\uB294 \uD68C\uC218\uB85C \uC778\uD574 \uD504\uB9B0\uD2B8\uAC00 \uC190\uC0C1\uB429\uB2C8\uB2E4, \uC774\uB97C \uD574\uACB0\uD569\uB2C8\uB2E4"\n#		G92 E-0.6\n#	{% endif %}\n\n[gcode_macro wait_for_temperatures]\ngcode:\n    \n	# \uC628\uB3C4 \uB300\uAE30. \uBAA9\uD45C\uAC00 0\uC778 \uACBD\uC6B0 \uC2E4\uC81C\uB85C \uAE30\uB2E4\uB9AC\uC9C0 \uC54A\uC744 \uAC83\uC785\uB2C8\uB2E4. \uB9E4\uC6B0 \uB0AE\uC740 \uC628\uB3C4\uB85C \uD50C\uB77C\uC2A4\uD305\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4!\n    M190 S{printer.heater_bed.target}\n    M109 T0 S{printer.extruder.target}\n	M109 T1 S{printer.extruder1.target}\n    \n\n[gcode_macro START_PRINT]\n# \uC774 \uCF54\uB4DC\uB294 \uD504\uB9B0\uD130 \uD5E4\uB4DC \uC628\uB3C4\uC640 \uBCA0\uB4DC \uC628\uB3C4 \uBAA9\uD45C\uAC00 \uC2AC\uB77C\uC774\uC11C\uC5D0 \uC758\uD574 \uC124\uC815\uB418\uC5C8\uC74C\uC744 \uAC00\uC815\uD569\uB2C8\uB2E4\ngcode:\n	CLEAR_PAUSE\n	{% if printer["gcode_macro bedmesh"].probe_installed != 0 %}\n	   RESPOND TYPE=error MSG="\uD504\uB85C\uBE0C\uAC00 \uC5EC\uC804\uD788 \uC7A5\uCC29\uB418\uC5B4 \uC788\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uD504\uB85C\uBE0C\uB97C \uC81C\uAC70\uD558\uACE0 \uBA85\uB839\uC5B4 \'probeoff\'\uB97C \uC2E4\uD589\uD558\uACE0 \uB2E4\uC2DC \uC778\uC1C4\uD558\uC138\uC694"\n	   CANCEL_PRINT\n	{% else %}\n		T0\n		home_if_not\n		wait_for_temperatures\n        Z_TILT_ADJUST\n\n		BED_MESH_LOAD\n		prepare_toolheads\n	{% endif %}\n\n\n[gcode_macro bedmesh]\nvariable_probe_installed: 1\ngcode:\n    {% if printer["gcode_macro bedmesh"].probe_installed == 0 %}\n	    RESPOND MSG="\uD504\uB85C\uBE0C\uB97C \uC124\uCE58\uD558\uACE0 \uBA85\uB839\uC5B4 \'probeon\'\uC744 \uC2E4\uD589\uD558\uC138\uC694"\n	{% else %}\n		RESPOND MSG="TO\uB97C \uC0AC\uC6A9\uD558\uC5EC \uBC14\uB2E5 \uBA54\uC26C \uCE21\uC815, x \uC624\uD504\uC14B \uC5C6\uC774"\n\n		home_if_not\n        Z_TILT_ADJUST\n		T0\n		SAVE_GCODE_STATE NAME=bedmesh\n		# \uD56D\uC0C1 \uC6D0\uC2DC \uC67C\uCABD \uD5E4\uB4DC\uB85C \uCE21\uC815\n		G90\n		SET_GCODE_OFFSET X=0\n		#G0 Z10 F6000\n		BED_MESH_CALIBRATE\n		#G0 Y0 Z100 #brian: \uC788\uC5C8\uB2E4\n		G28 X\n		RESTORE_GCODE_STATE NAME=bedmesh\n	{% endif %}\n\n\n[gcode_macro BED_MESH_LOAD]\ndescription: \uC62C\uBC14\uB978 \uC628\uB3C4\uB97C \uC704\uD55C \uAE30\uC874 \uBC14\uB2E5 \uCE98\uB9AC\uBE0C\uB808\uC774\uC158 \uBA54\uC26C \uB85C\uB4DC\ngcode:\n  ##### get target get temperature #####\n  {% set bed_temp = printer.heater_bed.target|int %}\n  ##### join everything to a single mesh name #####\n  {% set mesh_name = "MESH-" + bed_temp|string + "C" %}\n  ##### end of definitions #####\n  {% if printer.configfile.config["bed_mesh " + mesh_name] is defined %}\n    BED_MESH_PROFILE LOAD={mesh_name}\n    RESPOND TYPE=echo MSG="\uBA54\uC26C \uD504\uB85C\uD544 {mesh_name} \uB85C\uB4DC\uB428"\n  {% else %}\n    RESPOND TYPE=error MSG="\uBA54\uC26C \uD504\uB85C\uD544 {mesh_name} \uC5C6\uC74C"\n  {% endif %}\n\n[gcode_macro bedmesh_renew]\ngcode:\n	home_if_not\n	{% set dwell = 60000 %}\n	{% for t in  [50,60,70] %}\n        {% set mesh_name = "MESH-" + t|string + "C" %}\n		RESPOND MSG="\uBCA0\uB4DC\uB97C {t} C\uB85C \uAC00\uC5F4"\n		M190 S{t}\n		RESPOND MSG="\uC548\uC815\uD654 {dwell}ms"\n		G4 P{dwell}\n		bedmesh\n		BED_MESH_PROFILE SAVE={mesh_name}\n	{% endfor %}\n	SAVE_CONFIG\n[gcode_macro END_PRINT]\ngcode:\n    \n    M117 \uC778\uC1C4 \uC885\uB8CC.\n    G91 ; \uC0C1\uB300 \uC704\uCE58 \uC0AC\uC6A9\n    G1 E-1 F300 ; \uD544\uB77C\uBA58\uD2B8\uB97C \uC57D\uAC04 \uD6C4\uD1F4\uD558\uC5EC \uB178\uC990\uC744 \uB4E4\uC5B4\uC62C\uB9AC\uB294 \uB370 \uC555\uB825\uC744 \uC904\uC785\uB2C8\uB2E4\n    G1 Z+5 E-2 F1000 ; \uC57D\uAC04 Z\uCD95\uC744 \uC62C\uB9AC\uACE0 \uB354 \uB9CE\uC740 \uD6C4\uD1F4\uB97C \uC218\uD589\uD569\uB2C8\uB2E4\n#   T1\n#	T0\n#    G90 ; \uC808\uB300 \uC704\uCE58 \uC0AC\uC6A9\n# 	G0 Y220 F6000 ; \uC778\uC1C4\uBB3C\uC744 \uC811\uADFC\uD558\uAE30 \uC27D\uAC8C \uB9CC\uB4ED\uB2C8\uB2E4\n    m104 S0 T0 ; \uC5F4\uC6D0\uC744 \uAEBC\n    m104 S0 T1 ; \uC5F4\uC6D0\uC744 \uAEBC\n    M140 S0 ; \uBCA0\uB4DC \uC5F4\uAE30\uB97C \uAEBC\n    G90\n    T0\n    PARK_extruder1\n    PARK_extruder\n    M106 S255 ; \uB0C9\uAC01\uC744 \uC704\uD574 \uD32C\uC744 \uCF2D\uB2C8\uB2E4\n    M84 ; \uC2A4\uD14C\uD37C\uB97C \uB055\uB2C8\uB2E4\n    clear_stepper_x_range\n    M106 S0 ; \uD32C\uC744 \uB055\uB2C8\uB2E4\n    SAVE_AT_END\n\n[gcode_macro SEARCH_VARS]\ngcode:\n    {% set search = params.S|lower %}\n    {% set ns = namespace() %}\n    {% for item in printer  %}\n        {% if \' \' in item %}\n            {% set ns.path = [\'printer\', "[\'%s\']" % (item), \'\'] %}\n        {% else %}\n            {% set ns.path = [\'printer.\', item, \'\'] %}   \n        {% endif %} \n\n        {% if search in ns.path|lower %}\n            { action_respond_info(ns.path|join) }\n        {% endif %} \n\n        {% if printer[item].items() %}\n            {% for childkey, child in printer[item].items() recursive %}\n                {% set ns.path = ns.path[:loop.depth|int + 1] %}\n\n                {% if \' \' in childkey %}\n                    {% set null = ns.path.append("[\'%s\']" % (childkey)) %}\n                {% else %}\n                    {% set null = ns.path.append(".%s" % (childkey)) %}\n                {% endif %} \n\n                {% if child is mapping  %}\n                    { loop(child.items()) }\n                {% else %}\n                    {% if search in ns.path|lower %}\n                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   \n                    {% endif %} \n                {% endif %} \n                \n            {% endfor %}\n        {% endif %} \n    {% endfor %}\n    \n[gcode_macro SAVE_AT_END]\nvariable_save: 1\ngcode:\n  SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1\n  \n[gcode_macro SAVE_IF_SET]\ngcode:\n  {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}\n    SAVE_CONFIG\n  {% endif %}\n\n[gcode_macro INITIALIZE_VARIABLE]\ngcode:\n  {% if \'VARIABLE\' not in params %}\n    {action_respond_info("\uBCC0\uC218 \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uB204\uB77D\uB418\uC5C8\uC2B5\uB2C8\uB2E4")}\n  {% elif \'VALUE\' not in params %}\n    {action_respond_info("\uAC12 \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uB204\uB77D\uB418\uC5C8\uC2B5\uB2C8\uB2E4")}\n  {% else %}\n    {% set svv = printer.save_variables.variables %}\n    {% if params.VARIABLE not in svv %}\n      {% set escaped = params.VALUE|replace("\\"", "\\\\\\"") %}\n      SAVE_VARIABLE VARIABLE={params.VARIABLE} VALUE="{escaped}"\n    {% endif %}\n  {% endif %}\n\n\n\n[gcode_macro WIPE_LINE]\ngcode:\n  {% set z = params.Z|default(0.25)|float %}\n  {% set n = params.N|default(0.4)|float %}\n\n  {% if printer.toolhead.homed_axes != "xyz" %}\n    {action_respond_info("XYZ\uB97C \uBA3C\uC800 \uD648 \uC704\uCE58\uB85C \uC124\uC815\uD558\uC138\uC694")}\n  {% elif printer.extruder.temperature < 170 %}\n    {action_respond_info("\uC5D1\uC2A4\uD2B8\uB8E8\uB354 \uC628\uB3C4\uAC00 \uB108\uBB34 \uB0AE\uC2B5\uB2C8\uB2E4")}\n  {% else %}\n    SAVE_GCODE_STATE NAME=WIPE_LINE_state\n    M82\n    G90\n    G92 E0\n    G1 X10 Y20 Z5 F3000\n    G1 Z{z} F3000\n    G1 X10 Y150 F1500 E10.83\n    G1 X{ n + 10.0 } F5000\n    G1 Y22 F1500 E21.5\n    G1 Y20 F5000\n    RESTORE_GCODE_STATE NAME=WIPE_LINE_state MOVE=0\n  {% endif %}\n  \n[gcode_macro PREP_PRINT]\ndescription: \uC778\uC1C4 \uC2DC\uC791\uC744 \uC704\uD574 \uD504\uB85C\uD544\uC744 \uBD88\uB7EC\uC624\uACE0 \uC2DC\uC791\uD569\uB2C8\uB2E4\nvariable_x_max: 0\nvariable_y_max: 0\nvariable_z_max: 0\nvariable_nozzle: 0\nvariable_fila_dia: 0\nvariable_bed_temp: 0\nvariable_extruder_temp: 0\nvariable_chamber_temp: 0\nvariable_layer_count: 0\nvariable_tool_changes: 0\nvariable_cur_layer: 0\nvariable_num_layers: 0\nvariable_layer_z: 0\ngcode:\n\n  M117 \uC778\uC1C4 \uCD08\uAE30\uD654...\n\n  # \uD504\uB9B0\uD130 \uBE4C\uD2B8\uB41C \uBD80\uD53C \uD06C\uAE30 \uAD6C\uD558\uAE30\n  {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}\n  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}\n  {% set Z_MAX = printer.toolhead.axis_maximum.z|default(100)|float %}\n\n  # \uB178\uC990 \uC9C1\uACBD \uBC0F \uD544\uB77C\uBA58\uD2B8 \uB108\uBE44 \uC5BB\uAE30\n  {% set NOZZLE = printer.extruder.nozzle_diameter|default(0.4)|float %}\n  {% set FILADIA = printer.extruder.filament_diameter|default(1.64)|float %}\n\n  # \uD504\uB77C\uBC0D \uB77C\uC778 \uC2DC\uC791 \uC88C\uD45C \uC124\uC815\n  {% set X_START = 10.0|default(10.0)|float %}\n  {% set Y_START = 20.0|default(20.0)|float %}\n\n  # \uD504\uB77C\uBC0D \uB77C\uC778 \uC6A9\uB7C9 \uBC0F \uD544\uB77C\uBA58\uD2B8 \uAE38\uC774 \uACC4\uC0B0\n  {% set PRIMER_WIDTH = 0.75 * NOZZLE %}                    \n  {% set PRIMER_HEIGHT = 0.70 * NOZZLE %}           \n  {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}    \n  {% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %}    \n  {% set FILA_SECT = 3.1415 * ( FILADIA / 2.0)**2 %}          \n  {% set FILA_LENGTH = 1.55 * PRIMER_VOL / FILA_SECT %}\n  {% set FILAMENT_TYPE = params.FILAMENT|default(PLA)|string %}\n\n  # \uBCA0\uB4DC, \uC5D1\uC2A4\uD2B8\uB8E8\uB354, \uBC0F \uCC54\uBC84 \uC628\uB3C4 \uC2AC\uB77C\uC774\uC2F1 G\uCF54\uB4DC\uC5D0\uC11C \uC5BB\uAE30\n  {% set BED_TEMP = params.BED|default(60)|float %}\n  {% set EXTRUDER_TEMP = params.EXTRUDER|default(210)|float %}\n  {% set CHAMBER_TEMP = params.CHAMBER|default(50)|float %}\n\n  # \uB808\uC774\uC5B4 \uC218 \uC5BB\uAE30\n  {% set NUM_LAYERS = params.COUNT|default(0)|float %}\n  {% set CUR_LAYER = params.NUM|default(0)|float + 1 %}\n\n  # \uD544\uC694\uD55C \uB3C4\uAD6C \uBCC0\uACBD \uD69F\uC218 \uC5BB\uAE30\n  {% set TOOL_CHANGES = params.TOOLS|default(0)|float %}\n\n  # \uC778\uC1C4 \uC124\uC815 \uC0AC\uC591 \uC800\uC7A5\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=x_max VALUE={X_MAX}\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=y_max VALUE={Y_MAX}\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=z_max VALUE={Z_MAX}\n\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=nozzle VALUE={NOZZLE}\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=fila_dia VALUE={FILADIA}\n\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=bed_temp VALUE={BED_TEMP}\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=chamber_temp VALUE={CHAMBER_TEMP}\n\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=cur_layer VALUE={CUR_LAYER}\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=num_layers VALUE={NUM_LAYERS}\n\n  SET_GCODE_VARIABLE MACRO=PREP_PRINT VARIABLE=tool_changes VALUE={TOOL_CHANGES}\n\n  # \uC870\uBA85 \uCF1C\uAE30!\n  # \uC544\uC9C1 \uC870\uBA85\uC740 \uC5C6\uC9C0\uB9CC \uC7AC\uBBF8\uC788\uC5B4 \uBCF4\uC785\uB2C8\uB2E4!\n  #WLED_ON PRESET=1\n\n  # Z \uD504\uB85C\uBE59\uC744 \uC704\uD574 T0 \uC120\uD0DD\n  T0\n  PROBEON\n\n  # \uC608\uC5F4 \uBC0F \uC778\uC1C4 \uC900\uBE44 \uC2DC\uC791\n  G90 ; \uC808\uB300 \uC88C\uD45C \uC0AC\uC6A9\n  M83 ; \uC5D1\uC2A4\uD2B8\uB8E8\uB354 \uC0C1\uB300 \uC88C\uD45C \uBAA8\uB4DC\n\n  M117 \uBCA0\uB4DC \uC608\uC5F4 \uC911...\n\n  M104 S{EXTRUDER_TEMP}\n  G4 S10 ; \uBD80\uBD84\uC801\uC778 \uB178\uC990 \uC608\uC5F4 \uD5C8\uC6A9\n  M190 S{BED_TEMP} ; \uCD5C\uC885 \uBCA0\uB4DC \uC628\uB3C4 \uC124\uC815\n  #BED_MESH_PROFILE LOAD="default"\n  BED_MESH_LOAD ; \uC9C0\uC815\uB41C \uC628\uB3C4\uC5D0 \uB300\uD55C \uD504\uB85C\uD544 \uB85C\uB4DC\n  # BEDMESH ; \uC0C8 \uBC14\uB2E5 \uBA54\uC26C \uC0DD\uC131, \uC800\uC7A5\uB41C \uAC83\uC744 \uB85C\uB4DC\uD558\uC9C0 \uC54A\uC74C\n  M117 \uBAA8\uB4E0 \uCD95 \uD648 \uC704\uCE58...\n  G28 ; \uBAA8\uB4E0 \uCD95 \uD648 \uC704\uCE58\n  M117 Z-\uD2F8\uD2B8 \uC870\uC815 \uC911...\n  Z_TILT_ADJUST ; \uC774\uC911 Z \uCD95 \uCE98\uB9AC\uBE0C\uB808\uC774\uC158\n\n#  G1 Z50 F240\n#  G1 X2 Y10 F3000\n  M117 \uC628\uB3C4 \uC548\uC815\uD654 \uB300\uAE30...\n\n  M104 S{EXTRUDER_TEMP} ; \uCD5C\uC885 \uB178\uC990 \uC628\uB3C4 \uC124\uC815\n  G28 X ; \uC608\uC5F4 \uC911\uC5D0 \uC8FC\uCC28\n  M190 S{BED_TEMP} ; \uBCA0\uB4DC \uC628\uB3C4 \uC548\uC815\uD654 \uB300\uAE30\n  M109 S{EXTRUDER_TEMP} ; \uB178\uC990 \uC628\uB3C4 \uC548\uC815\uD654 \uB300\uAE30\n\n  WIPE_LINE\n\n  M117 \uC778\uC1C4 \uC2DC\uC791\n'})})]})}function A(n={}){let{wrapper:e}={...(0,_.a)(),...n.components};return e?(0,E.jsx)(e,{...n,children:(0,E.jsx)(d,{...n})}):d(n)}},79938:function(n,e,t){t.d(e,{Z:function(){return o},a:function(){return a}});var r=t(75271);let E={},_=r.createContext(E);function a(n){let e=r.useContext(_);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(E):n.components||E:a(n.components),r.createElement(_.Provider,{value:e},n.children)}}}]);