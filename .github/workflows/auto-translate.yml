name: Auto Pull Request

on:
  pull_request_target:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  check:
    name: "Check"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' && github.event.action == 'opened'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install canvas dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev
      - name: Install yarn
        run: npm install -g yarn
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: yarn install
      - name: Test build website
        run: yarn run build --locale zh-Hants
  translate:
    name: "Ai Translate"
    runs-on: ubuntu-latest
    needs: [check]
    if: (!contains(github.event.pull_request.head.ref, '[skip ci]'))
    outputs:
      pushed: ${{ steps.add-commit.outputs.pushed }}
      committed: ${{ steps.add-commit.outputs.committed }}
    steps:
      - name: Checkout pr
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Check if already translated
        id: check-translation
        run: |
          if git log -1 --pretty=format:%s | grep -q "i18n: ðŸŽ‰ auto translate"; then
            echo "Already translated, skipping translation."
            echo "should_translate=false" >> $GITHUB_OUTPUT
          else
            echo "Not translated yet, proceeding with translation."
            echo "should_translate=true" >> $GITHUB_OUTPUT
          fi
      - name: Install pip dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install openai
      - name: Get all test, doc and src files that have changed
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            docs/**
      - name: translate
        if: steps.check-translation.outputs.should_translate == 'true' && steps.changed-files.outputs.any_changed == 'true'
        env:
          MDX_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_URL: ${{ secrets.OPENAI_API_URL }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
        run: |
          python3 ./scripts/auto-translate.py --force -f "$MDX_FILES"
      - name: Add i18n files
        if: steps.check-translation.outputs.should_translate == 'true'
        id: add-commit
        uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
        with:
          add: "i18n/"
          author_name: ${{ github.event.pull_request.user.login }}
          author_email: ${{ github.event.pull_request.user.email }}
          message: "i18n: ðŸŽ‰ auto translate [skip ci]"
          push: true
  request-review:
    name: Request Review
    runs-on: ubuntu-latest
    needs: [translate]
    steps:
      - name: Request review from reviewers
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number: issue_number } = context.issue;
            const prCreator = context.payload.pull_request.user.login;
            const allReviewers = ['kluoyun', 'Zin2233', 'FLYmaker', 'FengHua741', 'xiaok12138']; 
            const validReviewers = allReviewers.filter(reviewer => reviewer!== prCreator);
            if (validReviewers.length > 0) {
              github.rest.pulls.requestReviewers({
                owner,
                repo,
                pull_number: issue_number,
                reviewers: validReviewers
              });
            } else {
              console.log('No valid reviewers found after filtering out the PR author.');
            }
